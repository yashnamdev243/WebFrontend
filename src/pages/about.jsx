
import React, { useMemo, useState ,useEffect, useRef} from "react";
import { Helmet } from "react-helmet";

import { Segmented, Button, Tabs, Timeline, Card, Collapse, Tag, Statistic, Row, Col, Descriptions, Divider, message } from "antd";
import {
  PhoneOutlined,
  WhatsAppOutlined,
  EnvironmentOutlined,
  ShoppingCartOutlined,
  CheckCircleTwoTone,
  ThunderboltOutlined,
  ReadOutlined,
  SafetyCertificateOutlined,
  GlobalOutlined,
} from "@ant-design/icons";
import { motion } from "framer-motion";

// ---------- CONFIG ----------
const PHONE = "9691089549";
const WHATSAPP_LINK = `https://wa.me/91${PHONE}?text=${encodeURIComponent(
  "рдирдорд╕реНрддреЗ! рдореБрдЭреЗ рдирд░реНрдорджреЗрд╢реНрд╡рд░ рд╢рд┐рд╡рд▓рд┐рдВрдЧ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдирдХрд╛рд░реА рдЪрд╛рд╣рд┐рдПред / Hello! I'd like to know more about Narmadeshwar Shivlings."
)}`;
const MAPS_QUERY = encodeURIComponent(
  "Namdev Narmadeshwar Shivling Arts, Mardana, Barwaha, Khargone, 451113"
);
const MAPS_LINK = `https://maps.app.goo.gl/znzwKS4GrVBksKgh9`;

const bgGrad =
  "bg-[radial-gradient(1000px_600px_at_50%_-200px,rgba(99,102,241,0.25),transparent_70%)]";

// ---------- TEXT CONTENT (HI + EN) ----------
const copy = {
  hi: {
    seoTitle:
      "Namdev Narmadeshwar Shivling Arts | рдирд░реНрдорджрд╛ рдкрддреНрдерд░ рдХреЗ рд╕реНрд╡рдпрдВрднреВ рдирд░реНрдорджреЗрд╢реНрд╡рд░ рд╢рд┐рд╡рд▓рд┐рдВрдЧ",
    seoDesc:
      "рдирд░реНрдорджрд╛ рдирджреА рдХреЗ рдкрд╡рд┐рддреНрд░ рдкрддреНрдерд░ рд╕реЗ рдмрдиреЗ рдирд░реНрдорджреЗрд╢реНрд╡рд░ рд╢рд┐рд╡рд▓рд┐рдВрдЧ тАФ рдирд╛рдорджреЗрд╡ рдкрд░рд┐рд╡рд╛рд░ (рдорд░реНрджрд╛рдирд╛, рдмрдбрд╝рд╡рд╛рд╣) рджреНрд╡рд╛рд░рд╛ рдкреАрдврд╝рд┐рдпреЛрдВ рд╕реЗ рд╣рд╕реНрддрдирд┐рд░реНрдорд┐рддред 1 рдЗрдВрдЪ рд╕реЗ 24 рдлреАрдЯ рддрдХ, рджреЗрд╢-рд╡рд┐рджреЗрд╢ рдореЗрдВ рдЖрдкреВрд░реНрддрд┐ред",
    heroTitle: "рдирд╛рдорджреЗрд╡ рдирд░реНрдорджреЗрд╢реНрд╡рд░ рд╢рд┐рд╡рд▓рд┐рдВрдЧ рдЖрд░реНрдЯ",
    heroSubtitle:
      "рдорд╛рдВ рдирд░реНрдорджрд╛ рдХреЗ рдкрддреНрдерд░ рд╕реЗ рдирд┐рд░реНрдорд┐рдд рд╕реНрд╡рдпрдВрднреВ рдирд░реНрдорджреЗрд╢реНрд╡рд░ рд╢рд┐рд╡рд▓рд┐рдВрдЧ тАФ рдкрд░рдВрдкрд░рд╛, рд╢реБрджреНрдзрддрд╛ рдФрд░ рдЖрд╕реНрдерд╛ рдХрд╛ рд╕рдВрдЧрдоред",
    ctas: { call: "рдХреЙрд▓ рдХрд░реЗрдВ", whatsapp: "рд╡реНрд╣рд╛рдЯреНрд╕рдПрдк", directions: "рджрд┐рд╢рд╛рдПрдБ" },
    storyHead: "рд╣рдорд╛рд░реА рд╡рд┐рд░рд╛рд╕рдд",
    story:
      "рджреЗрд╡реА рдЕрд╣рд┐рд▓реНрдпрд╛рдмрд╛рдИ рдХреЗ рд╕рдордп рд╕реЗ рдЪрд▓реА рдЖ рд░рд╣реА рдкрд░рдВрдкрд░рд╛ рдореЗрдВ, рд╕реНрд╡рд░реНрдЧреАрдп рдорд╛рдВрдЧреАрд▓рд╛рд▓ рдЬреА рдирд╛рдорджреЗрд╡ рдиреЗ рдорд╛рдВ рдирд░реНрдорджрд╛ рдХреЗ рдкрддреНрдерд░ рд╕реЗ рдирд░реНрдорджреЗрд╢реНрд╡рд░ рд╢рд┐рд╡рд▓рд┐рдВрдЧ рдирд┐рд░реНрдорд╛рдг рдХреА рд╢реБрд░реБрдЖрдд рдХреАред рдЙрдиреНрд╣реЛрдВрдиреЗ рдЕрдЯрд▓ рдмрд┐рд╣рд╛рд░реА рд╡рд╛рдЬрдкреЗрдпреА рдЬреА рд╕рд╣рд┐рдд рдХрдИ рдмрдбрд╝реЗ рд╕рдВрддреЛрдВ рдХреЛ рдирд░реНрдорджреЗрд╢реНрд╡рд░ рд╢рд┐рд╡рд▓рд┐рдВрдЧ рднреЗрдВрдЯ рдХрд┐рдП рдФрд░ рдЗрд╕ рджрд┐рд╡реНрдп рдзрд░реЛрд╣рд░ рдХреЛ рджреЗрд╢-рд╡рд┐рджреЗрд╢ рддрдХ рдкрд╣реБрдБрдЪрд╛рдпрд╛ред рдЖрдЬ рд╡рд╣реА рдХрд╛рд░реНрдп рдЙрдирдХреЗ рдкрд░рд┐рдЬрдиреЛрдВ тАФ рджреАрдкрдХ рдЬреА рдирд╛рдорджреЗрд╡, рд╢рд┐рд╡рдирд╛рд░рд╛рдпрдг рдЬреА рдирд╛рдорджреЗрд╡ рдФрд░ рдЕрд░рд╡рд┐рдВрдж рдирд╛рдорджреЗрд╡ тАФ рджреНрд╡рд╛рд░рд╛ рд╕рдорд░реНрдкрдг рдХреЗ рд╕рд╛рде рдЖрдЧреЗ рдмрдврд╝рд╛рдпрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИ, рдФрд░ рдЖрдиреЗ рд╡рд╛рд▓реА рдкреАрдврд╝рд┐рдпрд╛рдБ рднреА рдЗрд╕ рд╕реЗрд╡рд╛ рд╕реЗ рдЬреБрдбрд╝реА рд╣реБрдИ рд╣реИрдВред",
    beliefHead: "рдирд░реНрдорджреЗрд╢реНрд╡рд░ рдХреНрдпреЛрдВ рд╡рд┐рд╢рд┐рд╖реНрдЯ?",
    belief:
      "рдорд╛рдВ рдирд░реНрдорджрд╛ рдХреЗ рдкрддреНрдерд░ рд╕реЗ рдмрдирд╛ рд╢рд┐рд╡рд▓рд┐рдВрдЧ рд╕реНрд╡рдпрдВ рд╕рд┐рджреНрдз рдорд╛рдирд╛ рдЬрд╛рддрд╛ рд╣реИ тАФ рдЗрд╕рд▓рд┐рдП рдЗрд╕реЗ рдкреНрд░рд╛рдг-рдкреНрд░рддрд┐рд╖реНрдард╛ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╣реАрдВ рдорд╛рдиреА рдЬрд╛рддреАред рдЕрдиреЗрдХ рд╢рд┐рд╡рд▓рд┐рдВрдЧреЛрдВ рдореЗрдВ рдкреНрд░рдХреГрддрд┐ рдкреНрд░рджрддреНрдд рдЖрдХреГрддрд┐рдпрд╛рдБ рдЬреИрд╕реЗ рдЕрд░реНрдзрдирд╛рд░реАрд╢реНрд╡рд░, рдЬрдиреЗрдК, реР, рддреНрд░рд┐рд╢реВрд▓, рдЧрдгреЗрд╢ рдФрд░ рддрд┐рд▓рдХрдзрд╛рд░реА рд╕реНрд╡рд░реВрдк рд╕реНрд╡рд╛рднрд╛рд╡рд┐рдХ рд░реВрдк рд╕реЗ рдкреНрд░рд╛рдкреНрдд рд╣реЛрддреЗ рд╣реИрдВред",
    sizesHead: "рдЖрдХрд╛рд░ рдФрд░ рдСрд░реНрдбрд░",
    sizes:
      "рд╣рдо 1 рдЗрдВрдЪ рд╕реЗ 24 рдлреАрдЯ рддрдХ рдХреЗ рдирд░реНрдорджреЗрд╢реНрд╡рд░ рд╢рд┐рд╡рд▓рд┐рдВрдЧ рдмрдирд╛рддреЗ рд╣реИрдВред рдордВрджрд┐рд░, рдШрд░ рдпрд╛ рд╕рдВрд╕реНрдерд╛рди тАФ рдЖрдкрдХреЗ рд╕реНрдерд╛рди рдФрд░ рд╡рд┐рдзрд┐ рдХреЗ рдЕрдиреБрд░реВрдк рдХрд╕реНрдЯрдо рдЖрдХрд╛рд░ рдЙрдкрд▓рдмреНрдз рд╣реИрдВред",
    accessoriesHead: "рд╕реБрд╡рд┐рдзрд╛рдПрдБ рдФрд░ рд╕рд╛рдордЧреНрд░реА",
    accessories:
      "рдирд░реНрдорджреЗрд╢реНрд╡рд░ рд╢рд┐рд╡рд▓рд┐рдВрдЧ рдХреЗ рд╕рд╛рде рдЬрд▓рдзрд╛рд░рд╛, рдирдВрджреА рдЬреА, рдЧрдгреЗрд╢ рдЬреА, рдкрд╛рд░реНрд╡рддреА рдЬреА, рдХрд╛рд░реНрддрд┐рдХреЗрдп рдЬреА рдФрд░ рд╕рдВрдкреВрд░реНрдг рд╢рд┐рд╡ рдкрд░рд┐рд╡рд╛рд░ рдХреА рдкреНрд░рддрд┐рдорд╛рдПрдБ рдЙрдкрд▓рдмреНрдз рд╣реИрдВред рд╕рд╛рде рд╣реА рдирд╛рдЧ, рддреНрд░рд┐рд╢реВрд▓, рдЬрд▓рдкрд╛рддреНрд░ рдЖрджрд┐ рддрд╛рдВрдмреЗ/рдкреАрддрд▓ рдХреЗ рдкреВрдЬрди рд╕рд╛рдордЧреНрд░реА рднреА рдкреНрд░рд╛рдкреНрдд рдХреА рдЬрд╛ рд╕рдХрддреА рд╣реИред",
    exportLine:
      "рд╣рдорд╛рд░реЗ рдирд░реНрдорджреЗрд╢реНрд╡рд░ рд╢рд┐рд╡рд▓рд┐рдВрдЧ рдХреЗрд╡рд▓ рднрд╛рд░рдд рд╣реА рдирд╣реАрдВ, рд╡рд┐рджреЗрд╢реЛрдВ рдореЗрдВ рднреА рд╢реНрд░рджреНрдзрд╛рдкреВрд░реНрд╡рдХ рд╕реНрдерд╛рдкрд┐рдд рдХрд┐рдП рдЬрд╛рддреЗ рд╣реИрдВред",
    specsHead: "рдкрддрд╛ рдФрд░ рд╕рдВрдкрд░реНрдХ",
    addressTitle: "рдХрд╛рд░реНрдпрд╕реНрдерд▓ / рд╢реЛрд░реВрдо",
    address: [
      "рдирд╛рдо: рдЕрд░рд╡рд┐рдВрдж рдирд╛рдорджреЗрд╡",
      "рдкреЛрд╕реНрдЯ: рдорд░реНрджрд╛рдирд╛",
      "рддрд╣рд╕реАрд▓: рдмрдбрд╝рд╡рд╛рд╣",
      "рдЬрд┐рд▓рд╛: рдЦрд░рдЧреЛрди",
      "рдкрд┐рди: 451113",
      `рдореЛ.: ${PHONE}`,
    ],
    faqHead: "рд╕рд╛рдорд╛рдиреНрдп рдкреНрд░рд╢реНрди",
    faqs: [
      {
        q: "рдХреНрдпрд╛ рдирд░реНрдорджреЗрд╢реНрд╡рд░ рд╢рд┐рд╡рд▓рд┐рдВрдЧ рдХреА рдкреНрд░рд╛рдг-рдкреНрд░рддрд┐рд╖реНрдард╛ рдЖрд╡рд╢реНрдпрдХ рд╣реИ?",
        a: "рдкрд░рдВрдкрд░рд╛рдЧрдд рдорд╛рдиреНрдпрддрд╛ рдЕрдиреБрд╕рд╛рд░ рдирд░реНрдорджрд╛ рдкрддреНрдерд░ рд╕реЗ рдмрдирд╛ рд╢рд┐рд╡рд▓рд┐рдВрдЧ рд╕реНрд╡рдпрдВ рд╕рд┐рджреНрдз рдорд╛рдирд╛ рдЬрд╛рддрд╛ рд╣реИ, рдЗрд╕рд▓рд┐рдП рдкреНрд░рд╛рдг-рдкреНрд░рддрд┐рд╖реНрдард╛ рдЖрд╡рд╢реНрдпрдХ рдирд╣реАрдВ рдорд╛рдиреА рдЬрд╛рддреАред (рд╕реНрдерд╛рдиреАрдп рдкрд░рдВрдкрд░рд╛/рдЧреБрд░реБ рдХреА рд╕рд▓рд╛рд╣ рднреА рд▓реЗрдВ)ред",
      },
      {
        q: "рдХреНрдпрд╛ рдХрд╕реНрдЯрдо рдЖрдХрд╛рд░/рд╡рдЬрди рдкрд░ рдСрд░реНрдбрд░ рджреЗ рд╕рдХрддреЗ рд╣реИрдВ?",
        a: "рд╣рд╛рдБ, 1 рдЗрдВрдЪ рд╕реЗ 24 рдлреАрдЯ рддрдХ тАФ рдЖрдкрдХреЗ рд╕реНрдерд▓ рдФрд░ рдЖрд╡рд╢реНрдпрдХрддрд╛рдУрдВ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдХрд╕реНрдЯрдо рдирд┐рд░реНрдорд╛рдг рдХрд┐рдпрд╛ рдЬрд╛рддрд╛ рд╣реИред",
      },
      {
        q: "рдХреНрдпрд╛ рд╡рд┐рджреЗрд╢реЛрдВ рдореЗрдВ рд╢рд┐рдкрд┐рдВрдЧ рдЙрдкрд▓рдмреНрдз рд╣реИ?",
        a: "рд╣рд╛рдБ, рд╕реБрд░рдХреНрд╖рд┐рдд рдкреИрдХреЗрдЬрд┐рдВрдЧ рдФрд░ рд▓реЙрдЬрд┐рд╕реНрдЯрд┐рдХреНрд╕ рдХреЗ рд╕рд╛рде рдЕрдВрддрд░рд░рд╛рд╖реНрдЯреНрд░реАрдп рд╢рд┐рдкрд┐рдВрдЧ рдЙрдкрд▓рдмреНрдз рд╣реИред",
      },
    ],
    orderNow: "рдЕрднреА рд╡реНрд╣рд╛рдЯреНрд╕рдПрдк рдХрд░реЗрдВ",
        keywords: [
      "ЁЯХЙя╕П рдирд░реНрдорджреЗрд╢реНрд╡рд░ рд╢рд┐рд╡рд▓рд┐рдВрдЧ рдСрдирд▓рд╛рдЗрди рдЦрд░реАрджреЗрдВ ",
      "ЁЯМК рдорд╛рдБ рдирд░реНрдорджрд╛ рдкрддреНрдерд░ рд╢рд┐рд╡рд▓рд┐рдВрдЧ ",
      "ЁЯЩП рд╣рд╕реНрддрдирд┐рд░реНрдорд┐рдд рд╢рд┐рд╡рд▓рд┐рдВрдЧ ",
      "ЁЯПа рдШрд░ рдФрд░ рдордВрджрд┐рд░ рдХреЗ рд▓рд┐рдП рд╢рд┐рд╡рд▓рд┐рдВрдЧ ",
      "ЁЯкФ рдкреВрдЬрд╛ рдФрд░ рдзреНрдпрд╛рди рд╣реЗрддреБ рд╢рд┐рд╡рд▓рд┐рдВрдЧ ",
      "ЁЯМН рд╡рд┐рд╢реНрд╡рднрд░ рдореЗрдВ рдбрд┐рд▓реАрд╡рд░реА ",
      "тЬи рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕реНрд╡рдпрдВрднреВ рдирд░реНрдорджреЗрд╢реНрд╡рд░ рд╢рд┐рд╡рд▓рд┐рдВрдЧ ",
      "ЁЯФ▒ рдирдВрджреА, рддреНрд░рд┐рд╢реВрд▓ рдФрд░ рдЬрд▓рдзрд╛рд░рд╛ рд╕рд╣рд┐рдд ",
      "ЁЯУ┐ рд╕рдХрд╛рд░рд╛рддреНрдордХ рдКрд░реНрдЬрд╛ рдФрд░ рд╕рдореГрджреНрдзрд┐ рд╣реЗрддреБ рд╢рд┐рд╡рд▓рд┐рдВрдЧ ",
      "ЁЯПФя╕П рдЦрд░рдЧреЛрди, рдордзреНрдпрдкреНрд░рджреЗрд╢ рд╕реЗ рдУрд░рд┐рдЬрд┐рдирд▓ ",
    ],

  },
  en: {
    seoTitle:
      "Namdev Narmadeshwar Shivling Arts | Authentic Narmada Stone Shivlings",
    seoDesc:
      "Handcrafted Narmadeshwar Shivlings made from sacred Narmada river stone by the Namdev family (Mardana, Barwaha) for generations. Sizes from 1 inch to 24 feet. Shipping across India and worldwide.",
    heroTitle: "Namdev Narmadeshwar Shivling Arts",
    heroSubtitle:
      "Self-manifest Narmadeshwar Shivlings carved from the holy Narmada stone тАФ heritage, purity and devotion.",
    ctas: { call: "Call", whatsapp: "WhatsApp", directions: "Directions" },
    storyHead: "Our Legacy",
    story:
      "Since the era of Devi Ahilyabai, Late Mangilal Namdev pioneered crafting Narmadeshwar Shivlings from Narmada stone. He presented these sacred Shivlings to leaders and saints including Atal Bihari Vajpayee, taking this heritage from India to the world. Today, the tradition continues with Deepak Namdev, Shivanarayan Namdev and Arvind Namdev, with the next generation proudly carrying the craft forward.",
    beliefHead: "What makes Narmadeshwar special?",
    belief:
      "Shivlings made from Narmada stone are traditionally considered self-attained (swayam-siddha), thus not requiring a formal consecration. Many naturally reveal divine markings such as Ardhanarishwar, Janeu, Om, Trishul, Ganesha and Tilak-like patterns.",
    sizesHead: "Sizes & Orders",
    sizes:
      "We craft Shivlings from 1 inch up to 24 feet. Custom sizing for homes, temples and institutions is available to suit your space and ritual needs.",
    accessoriesHead: "Accessories & Deities",
    accessories:
      "Alongside the Shivling, we provide Jaladhara, Nandi, Ganesha, Parvati, Kartikeya and the complete Shiva Parivar statues. Copper/Brass puja items like Naag, Trishul and Jalpatra are also available.",
    exportLine:
      "Our Narmadeshwar Shivlings are installed with reverence across India and overseas.",
    specsHead: "Address & Contact",
    addressTitle: "Workshop / Showroom",
    address: [
      "Name: Arvind Namdev",
      "Post: Mardana",
      "Tehsil: Barwaha",
      "District: Khargone",
      "PIN: 451113",
      `Mob.: ${PHONE}`,
    ],
    faqHead: "FAQs",
    faqs: [
      {
        q: "Do Narmadeshwar Shivlings require consecration?",
        a: "By traditional belief, Narmada-stone Shivlings are self-attained and donтАЩt require consecration. (Follow guidance from your local tradition/guru).",
      },
      {
        q: "Can I place a custom size/weight order?",
        a: "Yes тАФ from 1 inch to 24 feet, fully customized to your site and needs.",
      },
      {
        q: "Do you ship internationally?",
        a: "Yes, with secure packaging and logistics support.",
      },
    ],
    orderNow: "WhatsApp Now",
        keywords: [
      "ЁЯХЙя╕П Buy Narmadeshwar Shivling Online ",
      "ЁЯМК Original Narmada Stone Shivling ",
      "ЁЯЩП Handcrafted Narmadeshwar Shivling Idol ",
      "ЁЯПа Best Shivling for Home & Temple ",
      "ЁЯкФ Shivling for Puja & Meditation ",
      "ЁЯМН Narmadeshwar Shivling Export Worldwide ",
      "тЬи Natural Self-Manifested Shivling ",
      "ЁЯФ▒ Shivling with Trishul, Nandi & Jaladhara ",
      "ЁЯУ┐ Shivling for Spiritual Energy & Prosperity ",
      "ЁЯПФя╕П Authentic Narmadeshwar Shivling from Khargone, MP ",
    ],

  },
};

// ---------- SMALL UI BITS ----------
const Fade = ({ children, delay = 0 }) => (
  <motion.div
    initial={{ opacity: 0, y: 16 }}
    whileInView={{ opacity: 1, y: 0 }}
    viewport={{ once: true, margin: "-80px" }}
    transition={{ duration: 0.6, delay }}
  >
    {children}
  </motion.div>
);

const Section = ({ id, children, className = "" }) => (
  <section id={id} className={`max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 ${className}`}>
    {children}
  </section>
);

// ---------- MAIN COMPONENT ----------
export default function About() {
  const [lang, setLang] = useState("en");
  const t = useMemo(() => copy[lang], [lang]);

  const tabs = [
    {
      key: "story",
      label: lang === "hi" ? t.storyHead : t.storyHead,
      children: (
        <Row gutter={[24, 24]} className="">
          <Col xs={24} md={14}>
            <Fade>
              <Card   bordered={false}
            className="rounded-2xl shadow-md !p-6 !bg-gradient-to-br from-white to-yellow-50 ">
                <p className=" text-sm sm:text-base leading-7 text-gray-700 mb-4">{t.story}</p>
                <Divider />
                <Timeline
                  items={[
                    {
                      color: "green",
                      dot: <CheckCircleTwoTone twoToneColor="#52c41a" />,
                      children:
                        lang === "hi"
                          ? "рд╕реНрд╡. рдорд╛рдВрдЧреАрд▓рд╛рд▓ рдЬреА рдирд╛рдорджреЗрд╡ тАФ рдкрд░рдВрдкрд░рд╛ рдХреА рд╢реБрд░реБрдЖрдд"
                          : "Late Mangilal Namdev тАФ Craft begins",
                    },
                    {
                      color: "blue",
                      dot: <SafetyCertificateOutlined />,
                      children:
                        lang === "hi"
                          ? "рдЕрдЯрд▓ рдмрд┐рд╣рд╛рд░реА рд╡рд╛рдЬрдкреЗрдпреА рдЬреА рд╕рд╣рд┐рдд рд╕рдВрддреЛрдВ рдХреЛ рд╢рд┐рд╡рд▓рд┐рдВрдЧ рднреЗрдВрдЯ"
                          : "Shivlings presented to leaders & saints incl. Atal Bihari Vajpayee",
                    },
                    {
                      color: "purple",
                      dot: <ReadOutlined />,
                      children:
                        lang === "hi"
                          ? "рджреАрдкрдХ рдЬреА, рд╢рд┐рд╡рдирд╛рд░рд╛рдпрдг рдЬреА рдФрд░ рдЕрд░рд╡рд┐рдВрдж рдирд╛рдорджреЗрд╡ рджреНрд╡рд╛рд░рд╛ рдкрд░рдВрдкрд░рд╛ рдХрд╛ рд╡рд┐рд╕реНрддрд╛рд░"
                          : "Tradition carried by Deepak, Shivanarayan & Arvind Namdev",
                    },
                    {
                      color: "gold",
                      dot: <GlobalOutlined />,
                      children:
                        lang === "hi" ? "рднрд╛рд░рдд рд╕реЗ рд╡рд┐рджреЗрд╢ рддрдХ рд╕реНрдерд╛рдкрдирд╛" : "Installed across India & overseas",
                    },
                  ]}
                />
              </Card>
            </Fade>
          </Col>
          <Col xs={24} md={10}>
            <Fade delay={0.1}>
              <Card
                 bordered={false}
            className="rounded-2xl shadow-md overflow-hidden "
                cover={
              <div className="relative h-64 sm:h-80 md:h-96 w-full">
                    {/* Replace with your image */}
                    <img
                      src="/slide8.jpg"
                      alt="Narmadeshwar Shivling artisan craft"
                      className="h-full w-full object-cover rounded-t-2xl"
                      onError={(e) => (e.currentTarget.style.display = "none")}
                    />
                <div className="absolute inset-0 bg-gradient-to-t from-black/50 via-transparent to-transparent rounded-t-2xl" />
                <div className="absolute !bottom-4 left-4 text-white drop-shadow-lg">
                      <h3 className="sm:text-xl font-semibold">{t.heroTitle}</h3>
                      <p className="sm:text-sm text-xs opacity-90 max-w-xs">{t.heroSubtitle}</p>
                    </div>
                  </div>
                }
              >
                <Row gutter={16}className="text-center mb-[-4px] p-2 !bg-gradient-to-br from-white to-yellow-50  ">
                  <Col span={8}>
                    <Statistic title={lang === "hi" ? "рдкреАрдврд╝рд┐рдпрд╛рдБ" : "Generations"} value={3} suffix={lang === "hi" ? "+" : "+"} />
                  </Col>
                  <Col span={8}>
                    <Statistic title={lang === "hi" ? "рдЖрдХрд╛рд░" : "Sizes"} value={24} suffix={lang === "hi" ? "рдлреАрдЯ" : "ft"} />
                  </Col>
                  <Col span={8}>
                    <Statistic title={lang === "hi" ? "рджреЗрд╢" : "Countries"} value={15} suffix={lang === "hi" ? "+" : "+"} />
                  </Col>
                </Row>
              </Card>
            </Fade>
          </Col>
        </Row>
      ),
    },
    {
      key: "craft",
      label: lang === "hi" ? "рд╡рд┐рд╢реЗрд╖рддрд╛рдПрдБ" : "Highlights",
      children: (
        <Fade>
          <Row gutter={[16, 16]} className="!p-4 sm:!p-6  !bg-gradient-to-br from-white to-yellow-50 rounded-2xl">
            {[
              { key: "ardhanarishwar", textHi: "рдЕрд░реНрдзрдирд╛рд░реАрд╢реНрд╡рд░", textEn: "Ardhanarishwar" },
              { key: "janeu", textHi: "рдЬрдиреЗрдК рдХреА рдЖрдХреГрддрд┐", textEn: "Janeu marking" },
              { key: "om", textHi: "реР рдХреА рдЖрдХреГрддрд┐", textEn: "Om marking" },
              { key: "trishul", textHi: "рддреНрд░рд┐рд╢реВрд▓", textEn: "Trishul" },
              { key: "ganesha", textHi: "рдЧрдгреЗрд╢ рдЬреА рдХреА рдЖрдХреГрддрд┐", textEn: "Ganesha pattern" },
              { key: "tilak", textHi: "рддрд┐рд▓рдХрдзрд╛рд░реА", textEn: "Tilak marking" },
            ].map((f) => (
              <Col xs={24} sm={12} md={8}key={f.key}>
                <Card             
  bordered={false}
              className="rounded-2xl !shadow-md h-full !bg-gradient-to-tl from-white to-yellow-50  hover:!shadow-lg transition-all duration-300 hover:scale-[1.02]  !p-4 sm:!p-5">
              <div className="flex items-center gap-3 mb-2 sm:mb-3">
                <ThunderboltOutlined className="!text-yellow-500 text-xl sm:text-2xl" />
                <h4 className="!text-base font-semibold !text-yellow-800">
                      {lang === "hi" ? f.textHi : f.textEn}
                    </h4>
                  </div>
              <p className="text-xs sm:text-sm text-gray-600 leading-6">
                    {lang === "hi"
                      ? "рдХрдИ рд╢рд┐рд╡рд▓рд┐рдВрдЧреЛрдВ рдореЗрдВ рдпреЗ рдиреЗрдЪреБрд░рд▓ рдкреИрдЯрд░реНрди рд╕реНрд╡рд╛рднрд╛рд╡рд┐рдХ рд░реВрдк рд╕реЗ рджрд┐рдЦрд╛рдИ рджреЗрддреЗ рд╣реИрдВред"
                      : "These natural patterns are often revealed in the stone itself."}
                  </p>
                </Card>
              </Col>
            ))}
          </Row>
      <Divider className="my-6 sm:my-8" />
      <Card bordered={false} className="rounded-2xl !shadow-md !bg-gradient-to-br from-white to-yellow-50 !p-4 sm:!p-6">
            <Descriptions
              title={     <h3 className="text-base sm:text-lg font-semibold text-yellow-700">
 {lang === "hi" ? t.accessoriesHead : t.accessoriesHead}             </h3>
              }
              bordered
              column={{ xs: 1, sm: 2, md: 3 }}
              size="middle"
                        labelStyle={{ fontWeight: 600, color: "#374151" }}

            >
              <Descriptions.Item label={lang === "hi" ? "рджреЗрд╡ рдкреНрд░рддрд┐рдорд╛рдПрдБ" : "Deities"}>
                {lang === "hi"
                  ? "рдирдВрджреА, рдЧрдгреЗрд╢, рдкрд╛рд░реНрд╡рддреА, рдХрд╛рд░реНрддрд┐рдХреЗрдп, рд╕рдВрдкреВрд░реНрдг рд╢рд┐рд╡ рдкрд░рд┐рд╡рд╛рд░"
                  : "Nandi, Ganesha, Parvati, Kartikeya, Complete Shiva Parivar"}
              </Descriptions.Item>
              <Descriptions.Item label={lang === "hi" ? "рдкреВрдЬрди рд╕рд╛рдордЧреНрд░реА" : "Puja Items"}>
                {lang === "hi" ? "рдирд╛рдЧ, рддреНрд░рд┐рд╢реВрд▓, рдЬрд▓рдкрд╛рддреНрд░" : "Naag, Trishul, Jalpatra"}
              </Descriptions.Item>
              <Descriptions.Item label={lang === "hi" ? "рдзрд╛рддреБ" : "Metals"}>
                {lang === "hi" ? "рддрд╛рдВрдмрд╛, рдкреАрддрд▓" : "Copper, Brass"}
              </Descriptions.Item>
            </Descriptions>
            <p className="mt-4 sm:mt-5 text-yellow-700 text-xs sm:text-sm italic border-t pt-3 sm:pt-4">
              {t.exportLine}</p>
          </Card>
        </Fade>
      ),
    },
    {
      key: "sizes",
      label: lang === "hi" ? t.sizesHead : t.sizesHead,
      children: (
        <Fade>
          <Row gutter={[16, 16]}>
        <Col xs={24} sm={24} md={14}>
              <Card className=" rounded-2xl shadow-md !p-4 sm:!p-6 !bg-gradient-to-br from-white to-yellow-50 
">
                <p className="text-sm sm:text-base leading-7 text-gray-700 mb-3 sm:mb-4">{t.sizes}</p>
            <div className="mt-3 sm:mt-4 flex flex-wrap gap-2">
                  {["1\"", "3\"", "6\"", "9\"", "12\"", "18\"", "24\"", "3ft", "6ft", "12ft", "24ft"].map((s) => (
                    <Tag key={s} color="geekblue" className="px-3 py-1 rounded-full  text-xs sm:text-sm font-medium !bg-yellow-100 !text-yellow-700">{s}</Tag>
                  ))}
                </div>
            <div className="mt-5 sm:mt-6 flex flex-col sm:flex-row flex-wrap gap-3">
                  <Button
                    type="primary"
                    icon={<WhatsAppOutlined  className="text-lg sm:text-xl mt-0.5"/>}
                    size="large"
                    className="!bg-green-600 hover:!bg-green-700 rounded-xl  w-full sm:w-auto"
                    onClick={() => message.success(lang === "hi" ? "рдСрд░реНрдбрд░ рд╕рд╣рд╛рдпрддрд╛ рдЦреЛрд▓реА рдЧрдИ" : "Order assistance opened")}
                    href={WHATSAPP_LINK}
                    target="_blank"
                  >
                    {t.orderNow}
                  </Button>
                  <Button icon={<PhoneOutlined />} href={`tel:+91${PHONE}`} size="large"                              className="rounded-xl w-full sm:w-auto"

>
                    {t.ctas.call}
                  </Button>
                  <Button icon={<EnvironmentOutlined />} href={MAPS_LINK} target="_blank" size="large"                                className="rounded-xl w-full sm:w-auto"

>
                    {t.ctas.directions}
                  </Button>
                </div>
              </Card>
            </Col>
        <Col xs={24} sm={24} md={10}>
              <Card className="rounded-2xl shadow-sm overflow-hidden">
                <div className={"h-52 sm:h-64  w-full !bg-gradient-to-br from-yellow-50 to-yellow-100 flex items-center justify-center"}> 
                  {/* Replace with a size showcase image */}
                  <img
                    src="/narmadeshwar27.jpg"
                    alt="Narmadeshwar Shivling sizes"
                    className="h-full w-full object-cover"
                    onError={(e) => (e.currentTarget.style.display = "none")}
                  />
                </div>
            <div className="mt-4 grid grid-cols-1 sm:grid-cols-2 gap-3 p-4 sm:p-6">
                  <Card size="small" className="rounded-xl !bg-indigo-50 !p-4">
                    <h5 className="font-semibold text-sm text-indigo-800">{lang === "hi" ? "рдЯреЗрдВрдкрд▓ рдЧреНрд░реЗрдб рдлрд┐рдирд┐рд╢" : "Temple-grade finish"}</h5>
                    <p className="text-xs mt-1 text-slate-600">{lang === "hi" ? "рд╣рд╛рдереЛрдВ рд╕реЗ рдкреЙрд▓рд┐рд╢ рд╡ рд╕рдВрддреБрд▓рди" : "Hand-polished and balanced"}</p>
                  </Card>
                  <Card size="small" className="rounded-xl !bg-yellow-50 !p-4">
                    <h5 className="font-semibold text-sm text-yellow-800">{lang === "hi" ? "рдХрд╕реНрдЯрдо рдЙрддреНрдХреАрд░реНрдгрди" : "Custom engraving"}</h5>
                    <p className="text-xs mt-1 text-slate-600">{lang === "hi" ? "рдЖрджреЗрд╢ рдкрд░ рдЙрдкрд▓рдмреНрдз" : "Available on request"}</p>
                  </Card>
                </div>
              </Card>
            </Col>
          </Row>
        </Fade>
      ),
    },
    {
      key: "faq",
      label: lang === "hi" ? t.faqHead : t.faqHead,
      children: (
        <Fade>
          <Collapse
            accordion
              bordered={false}
            className="rounded-2xl overflow-hidden shadow-sm bg-gradient-to-br from-white to-yellow-50"
                    expandIconPosition="end"

            items={t.faqs.map((f, i) => ({ key: `${i}`, label:(
            <span className="sm:text-base font-semibold !text-yellow-600 transition-colors">  {f.q}  </span>
          ), children: <p className="leading-7 text-yellow-700 p-4 rounded-xl bg-yellow-100">{f.a}</p> }))}
          />
        </Fade>
      ),
    },
  ];

  const jsonLd = {
    "@context": "https://schema.org",
    "@type": "LocalBusiness",
    name: "Namdev Narmadeshwar Shivling Arts",
    description: copy.en.seoDesc,
    url: "https://your-domain.com/about",
    image: [
      "https://your-domain.com/images/narmadeshwar-hero.jpg",
      "https://your-domain.com/images/size-showcase.jpg",
    ],
    telephone: `+91${PHONE}`,
    address: {
      "@type": "PostalAddress",
      streetAddress: "Mardana",
      addressLocality: "Barwaha",
      addressRegion: "Khargone",
      postalCode: "451113",
      addressCountry: "IN",
    },
    sameAs: [
      "https://maps.google.com/?q=Namdev+Narmadeshwar+Shivling+Arts+Mardana",
      WHATSAPP_LINK,
    ],
  };



  const [index, setIndex] = useState(0);
 

    useEffect(() => {
    const timer = setInterval(() => {
      setIndex((prev) => (prev + 1) % copy[lang].keywords.length);
    }, 3000);
    return () => clearInterval(timer);
  }, [lang]);

    const navRef = useRef(null);

  useEffect(() => {
    const observer = new MutationObserver(() => {
      const activeTab = navRef.current?.querySelector(".ant-tabs-tab-active");
      if (activeTab) {
        activeTab.scrollIntoView({
          behavior: "smooth",
          inline: "center",
          block: "nearest",
        });
      }
    });

    if (navRef.current) {
      observer.observe(navRef.current, {
        attributes: true,
        subtree: true,
        attributeFilter: ["class"],
      });
    }

    return () => observer.disconnect();
  }, []);

  return (
    <div className="relative min-h-screen  bg-gradient-to-br from-[#fffdf9] to-[#f8f4f0]  text-slate-900 ">
      <Helmet>
        <title>{t.seoTitle}</title>
        <meta name="description" content={t.seoDesc} />
        <link rel="canonical" href="https://your-domain.com/about" />
        <script type="application/ld+json">{JSON.stringify(jsonLd)}</script>
        {/* OpenGraph */}
        <meta property="og:title" content={t.seoTitle} />
        <meta property="og:description" content={t.seoDesc} />
        <meta property="og:type" content="website" />
        <meta property="og:url" content="https://your-domain.com/about" />
      </Helmet>

      {/* Hero */}
      <div className={`relative overflow-hidden ${bgGrad}`}>
  <Section className="pt-16 pb-14 sm:pt-24 sm:pb-20">
    <div className="flex flex-col-reverse lg:grid lg:grid-cols-12 gap-14 items-center text-center lg:text-left">
      
      {/* Left Section */}
      <div className="lg:col-span-7 flex flex-col items-center lg:items-start">
        <Fade>
          {/* Small Tag */}
          {/* <div className="inline-flex items-center gap-2 rounded-full border border-slate-200 px-4 py-1.5 text-xs sm:text-sm mb-6 bg-white/60 backdrop-blur-lg shadow-sm">
            <span className="font-semibold text-slate-700 tracking-wide">
              тЬи About тАв рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ
            </span>
          </div> */}

          {/* Heading */}
          <h1 className="text-2xl sm:text-4xl lg:text-4xl font-extrabold tracking-tight text-gray-900 leading-tight">
            {t.heroTitle}
          </h1>

          {/* Subtitle */}
          <p className="mt-5 text-base sm:text-lg text-slate-600 max-w-xl leading-relaxed">
            {t.heroSubtitle}
          </p>

          {/* Buttons */}
      <div className="mt-10 flex flex-col sm:flex-row flex-wrap justify-center lg:justify-start gap-5">
  {/* Call Button */}
  <Button
    type="primary"
    size="large"
    icon={<PhoneOutlined style={{ fontSize: '1.25rem' }} />}
    href={`tel:+91${PHONE}`}
    className="!bg-gradient-to-r from-blue-600 to-blue-700 hover:!from-blue-700 hover:!to-blue-800 
               rounded-2xl !px-8 !py-5 !shadow-lg hover:!shadow-2xl 
               transform hover:scale-105 transition-all duration-300 ease-out
               flex items-center gap-2"
  >
    <span className="font-semibold tracking-wide">{t.ctas.call}</span>
  </Button>

  {/* WhatsApp Button */}
  <Button
    size="large"
    icon={<WhatsAppOutlined style={{ fontSize: '1.25rem' }} />}
    href={WHATSAPP_LINK}
    target="_blank"
    className="!bg-gradient-to-r from-green-500 to-green-600 hover:!from-green-600 hover:!to-green-700 
               !text-white rounded-2xl !px-8 !py-5 !shadow-lg hover:!shadow-2xl 
               transform hover:scale-105 transition-all duration-300 ease-out
               flex items-center gap-2"
  >
    <span className="font-semibold tracking-wide">{t.ctas.whatsapp}</span>
  </Button>

  {/* Directions Button */}
  <Button
    size="large"
    icon={<EnvironmentOutlined style={{ fontSize: '1.25rem' }} />}
    href={MAPS_LINK}
    target="_blank"
    className="!bg-gradient-to-r from-red-500 to-red-600 hover:!from-red-600 hover:!to-red-700 
               !text-white rounded-2xl !px-8 !py-5 !shadow-lg hover:!shadow-2xl 
               transform hover:scale-105 transition-all duration-300 ease-out
               flex items-center gap-2"
  >
    <span className="font-semibold tracking-wide">{t.ctas.directions}</span>
  </Button>
</div>


          {/* Language Switch */}
          <div className="mt-10">
            <Segmented
              size="large"
              value={lang}
              onChange={(val) => setLang(val)}
              options={[
                { label: "рд╣рд┐рдВрджреА", value: "hi" },
                { label: "English", value: "en" },
              ]}
              className="!bg-white/60 backdrop-blur-md !shadow-xl 
               rounded-full px-4 py-2 border border-slate-200/50
               transition-all duration-300 hover:shadow-2xl"
            />
          </div>
        </Fade>
      </div>

      {/* Right Section (Image) */}
      <div className="lg:col-span-5 w-full flex justify-center mt-10">
        <Fade delay={0.1}>
          <div className="relative rounded-xl overflow-hidden shadow-2xl ring-1 ring-black/5 max-w-md w-full">
            <img
              src="/slide2.jpg"
              alt="Namdev Narmadeshwar Shivling Arts workshop"
              className="w-full h-64 sm:h-80 object-cover"
              onError={(e) => (e.currentTarget.style.display = "none")}
            />
            <div className="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent" />
            <div className="absolute bottom-4 text-white px-1">
               <motion.p
      key={index}
      initial={{ opacity: 0, y: 15 }}
      animate={{ opacity: 1, y: 0 }}
      exit={{ opacity: 0, y: -15 }}
      transition={{ duration: 0.7 }}
      className="lg:text-lg text-sm font-medium tracking-wide drop-shadow text-center text-gray-200"
    >
       {t.keywords[index]}
    </motion.p>
            </div>
          </div>
        </Fade>
      </div>
    </div>
  </Section>
</div>


      {/* Tabs Sections */}
      <Section className="pb-16">
        <Tabs
          defaultActiveKey="story"
              className="custom-tabs"

          items={tabs.map(({ key, label, children }) => ({ key, label:  (
        <span className="px-4 py-2 text-sm md:text-base font-medium whitespace-nowrap  ">{label}</span>
      ), children }))}
              renderTabBar={(props, DefaultTabBar) => (
          <div ref={navRef} className="overflow-x-auto  flex w-full">
            <DefaultTabBar {...props} className="!flex !w-max space-x-2"  />
          </div>
        )}

        />
      </Section>
      

      {/* Contact Card */}
    <Section className="py-12 lg:px-8 px-4">
  <Fade>
    <Card className="rounded-3xl shadow-lg border border-slate-100 !bg-gradient-to-br from-white to-yellow-50 !p-8">
      <Row gutter={[32, 32]} align="stretch">
        
        {/* Left Section */}
        <Col xs={24} md={14}>
         <div className="h-full flex flex-col items-center justify-center text-center max-w-2xl mx-auto">
 <h2 className="lg:text-3xl text-xl font-bold text-center py-2 px-10 text-white bg-gradient-to-l from-[#2e2b06]  to-[#ffcc70] mb-8">    {t.specsHead}
  </h2>
  <p className="text-gray-600 text-lg mb-6">
    {t.addressTitle}
  </p>
  <ul className="space-y-3">
    {t.address.map((line, i) => (
      <li
        key={i}
        className="flex items-start justify-start gap-3 text-base text-yellow-700"
      >
        <span className="flex-shrink-0 w-2.5 h-2.5 mt-2 rounded-full bg-gradient-to-r from-yellow-500 to-black"></span>
        {line}
      </li>
    ))}
  </ul>
</div>

        </Col>

        {/* Right Section - Action Buttons as Tiles */}
        <Col xs={24} md={10}>
          <div className="h-full flex flex-col justify-center gap-5">
            <a
              href={`tel:+91${PHONE}`}
              className="flex items-center gap-4 !bg-blue-50 hover:!bg-blue-100 rounded-2xl p-5 shadow-sm transition"
            >
              <div className="flex h-12 w-12 lg:text-2xl text-xl items-center justify-center rounded-xl bg-blue-600 text-white">
                <PhoneOutlined />
              </div>
              <span className="text-lg font-semibold text-slate-800">
                {t.ctas.call}
              </span>
            </a>

            <a
              href={WHATSAPP_LINK}
              target="_blank"
              className="flex items-center gap-4 !bg-green-50 hover:!bg-green-100 rounded-2xl p-5 shadow-sm transition"
            >
              <div className="flex h-12 w-12 lg:text-2xl text-xl items-center justify-center rounded-xl bg-green-500 text-white">
                <WhatsAppOutlined />
              </div>
              <span className="text-lg font-semibold text-slate-800">
                {t.ctas.whatsapp}
              </span>
            </a>

            <a
              href={MAPS_LINK}
              target="_blank"
              className="flex items-center gap-4 !bg-red-50 hover:!bg-red-100 rounded-2xl p-5 shadow-sm transition"
            >
              <div className="flex h-12 w-12 lg:text-2xl text-xl items-center justify-center rounded-xl bg-red-500 text-white">
                <EnvironmentOutlined />
              </div>
              <span className="text-lg font-semibold text-slate-800">
                {t.ctas.directions}
              </span>
            </a>
          </div>
        </Col>
      </Row>
    </Card>
  </Fade>
</Section>


      {/* <footer className="border-t py-8 text-center text-sm text-slate-500">
        ┬й {new Date().getFullYear()} Namdev Narmadeshwar Shivling Arts тАв {lang === "hi" ? "рдорд░реНрджрд╛рдирд╛, рдмрдбрд╝рд╡рд╛рд╣, рдЦрд░рдЧреЛрди" : "Mardana, Barwaha, Khargone"}
      </footer> */}
    </div>
  );
}
